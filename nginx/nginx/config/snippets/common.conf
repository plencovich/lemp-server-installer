# Cache
location ~* \.(ogg|ogv|svgz|otf|woff|mp4|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf|3gp|wmv|avi|asf|asx|mpg|mpeg|pls|mp3|swf|flv|uha|7z|docx|xlsx|pdf|iso)$
{
    gzip_static off;
    add_header Access-Control-Allow-Origin *;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    access_log off;
    log_not_found off;
    expires max;
}
location ~* \.(js)$ {
    add_header Access-Control-Allow-Origin *;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    access_log off;
    expires 30d;
    break;
}

location ~* \.(css)$ {
    add_header Access-Control-Allow-Origin *;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    access_log off;
    expires 30d;
    break;
}

location ~* \.(html|htm|txt)$ {
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    access_log off;
    expires 1d;
    break;
}

location ~* \.(eot|svg|ttf|woff|woff2)$ {
    add_header Access-Control-Allow-Origin *;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    access_log off;
    expires 30d;
    break;
}

# Denegar acceso
location ~ \.(neon|ini|log|yml|env|sql)$ {
    deny all;
}

# Access log OFF
location = /robots.txt  { access_log off; log_not_found off; }
location = /humans.txt  { access_log off; log_not_found off; }
location = /favicon.ico { access_log off; log_not_found off; }

# Autoriza a Let's Encrypt
location ~ /.well-known {
    location ~ /.well-known/acme-challenge/(.*) {
        more_set_headers    "Content-Type: text/plain";
    }
}

# Seguridad para los archivos ocultos
location ~ /\. {
    deny all;
    access_log off;
    log_not_found off;
}

# Seguridad para los archivos .git
location ~ /\.git/* {
    deny all;
    access_log off;
    log_not_found off;
}

# Muestra Error 403 para estos archivos.
if ($request_uri ~* "^.+(readme|license)\.(txt|html|md)$") {
    return 403;
}

# Personaliza p√°ginas de ERROR
error_page 404 /custom_404.html;
location = /custom_404.html {
    root /etc/nginx/html;
    internal;
}

error_page 401 /custom_401.html;
location = /custom_401.html {
    root /etc/nginx/html;
    internal;
}

error_page 500 502 503 504 /custom_50x.html;
location = /custom_50x.html {
    root /etc/nginx/html;
    internal;
}

error_page 403 https://plen.co/403;
